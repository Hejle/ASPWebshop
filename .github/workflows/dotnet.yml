name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Build-files
        path: |
          Webshop/bin
          ASPWebshopTest/bin/
  
  analyze:
    runs-on: windows-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - name: Restore dependencies
      run: dotnet restore
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
        New-Item -Path .\.sonar\scanner -ItemType Directory
        dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"Hejle_ASPWebshop" /o:"hejle" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        dotnet build --no-restore
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        
  test:
    name: Run Unittest
    needs: build
    runs-on: windows-latest
    steps:
      - name: Debug
        run: ls
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: Build-files
      - name: Debug
        run: ls
      - name: Run all tests except Integration Tests
        run: dotnet test --no-build --verbosity normal --filter "TestCategory!=IntegrationTest"
